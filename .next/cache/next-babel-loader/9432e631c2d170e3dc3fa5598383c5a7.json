{"ast":null,"code":"var _jsxFileName = \"/Users/jonayahj/Desktop/Think Halcyon/Clients/Yego Coffee/YC Website 2.0/yegocoffee/src/components/Control/ImageLightbox.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport classNames from \"classnames\";\nimport Lightbox from \"react-image-lightbox\";\nexport default function ImageLightbox(_ref) {\n  _s();\n\n  var imgSrc = _ref.imgSrc,\n      className = _ref.className,\n      alt = _ref.alt;\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  return __jsx(React.Fragment, null, __jsx(\"img\", {\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: function onClick() {\n      return setIsOpen(true);\n    },\n    className: classNames(className),\n    src: imgSrc,\n    alt: alt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }), isOpen && __jsx(Lightbox, {\n    mainSrc: imgSrc,\n    onCloseRequest: function onCloseRequest() {\n      return setIsOpen(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }));\n}\n\n_s(ImageLightbox, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = ImageLightbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageLightbox\");","map":{"version":3,"sources":["/Users/jonayahj/Desktop/Think Halcyon/Clients/Yego Coffee/YC Website 2.0/yegocoffee/src/components/Control/ImageLightbox.js"],"names":["useState","classNames","Lightbox","ImageLightbox","imgSrc","className","alt","isOpen","setIsOpen","cursor"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,eAAe,SAASC,aAAT,OAAmD;AAAA;;AAAA,MAA1BC,MAA0B,QAA1BA,MAA0B;AAAA,MAAlBC,SAAkB,QAAlBA,SAAkB;AAAA,MAAPC,GAAO,QAAPA,GAAO;;AAAA,kBACpCN,QAAQ,CAAC,KAAD,CAD4B;AAAA,MACzDO,MADyD;AAAA,MACjDC,SADiD;;AAEhE,SACE,4BACE;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KADT;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMD,SAAS,CAAC,IAAD,CAAf;AAAA,KAFX;AAGE,IAAA,SAAS,EAAEP,UAAU,CAACI,SAAD,CAHvB;AAIE,IAAA,GAAG,EAAED,MAJP;AAKE,IAAA,GAAG,EAAEE,GALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASGC,MAAM,IACL,MAAC,QAAD;AAAU,IAAA,OAAO,EAAEH,MAAnB;AAA2B,IAAA,cAAc,EAAE;AAAA,aAAMI,SAAS,CAAC,KAAD,CAAf;AAAA,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADF;AAeD;;GAjBuBL,a;;KAAAA,a","sourcesContent":["import { useState } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport Lightbox from \"react-image-lightbox\";\r\n\r\nexport default function ImageLightbox({ imgSrc, className, alt }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <img\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={() => setIsOpen(true)}\r\n        className={classNames(className)}\r\n        src={imgSrc}\r\n        alt={alt}\r\n      />\r\n\r\n      {isOpen && (\r\n        <Lightbox mainSrc={imgSrc} onCloseRequest={() => setIsOpen(false)} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}